//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace PhotoDBGUI.PhotoDB.Admin {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdminSoap", Namespace="http://services.jborg.info/photodb/1.0/")]
    public class Admin : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Admin() {
            this.Url = "http://localhost/photodb/admin.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/CreateFolder", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateFolder(string name, string caption) {
            object[] results = this.Invoke("CreateFolder", new object[] {
                        name,
                        caption});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFolder(string name, string caption, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateFolder", new object[] {
                        name,
                        caption}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/CreatePhoto", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreatePhoto(string folder_id, string caption) {
            object[] results = this.Invoke("CreatePhoto", new object[] {
                        folder_id,
                        caption});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePhoto(string folder_id, string caption, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePhoto", new object[] {
                        folder_id,
                        caption}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreatePhoto(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/CreateInstance", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateInstance(string photo_id, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] image) {
            object[] results = this.Invoke("CreateInstance", new object[] {
                        photo_id,
                        image});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateInstance(string photo_id, System.Byte[] image, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateInstance", new object[] {
                        photo_id,
                        image}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateInstance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/CreateUser", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateUser(string real_name, string login, string password, int sec_level) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        real_name,
                        login,
                        password,
                        sec_level});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateUser(string real_name, string login, string password, int sec_level, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateUser", new object[] {
                        real_name,
                        login,
                        password,
                        sec_level}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/DeleteFolder", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFolder(string folder_id) {
            this.Invoke("DeleteFolder", new object[] {
                        folder_id});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFolder(string folder_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFolder", new object[] {
                        folder_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/DeletePhoto", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePhoto(string photo_id) {
            this.Invoke("DeletePhoto", new object[] {
                        photo_id});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePhoto(string photo_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePhoto", new object[] {
                        photo_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeletePhoto(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/DeleteInstance", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteInstance(string instance_id) {
            this.Invoke("DeleteInstance", new object[] {
                        instance_id});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteInstance(string instance_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteInstance", new object[] {
                        instance_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteInstance(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
}
