//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace PhotoDBGUI.PhotoDB.Access {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccessSoap", Namespace="http://services.jborg.info/photodb/1.0/")]
    public class Access : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public SessionHeader SessionHeaderValue;
        
        /// <remarks/>
        public Access() {
            this.Url = "http://localhost/photodb/access.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectAllFolders", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder[] SelectAllFolders() {
            object[] results = this.Invoke("SelectAllFolders", new object[0]);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectAllFolders(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectAllFolders", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Folder[] EndSelectAllFolders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectFolderByFriendly", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder SelectFolderByFriendly(int friendly_id) {
            object[] results = this.Invoke("SelectFolderByFriendly", new object[] {
                        friendly_id});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectFolderByFriendly(int friendly_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectFolderByFriendly", new object[] {
                        friendly_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndSelectFolderByFriendly(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectFolderByGUID", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder SelectFolderByGUID(string id) {
            object[] results = this.Invoke("SelectFolderByGUID", new object[] {
                        id});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectFolderByGUID(string id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectFolderByGUID", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndSelectFolderByGUID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectAllPhotos", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo[] SelectAllPhotos(string folder_id) {
            object[] results = this.Invoke("SelectAllPhotos", new object[] {
                        folder_id});
            return ((Photo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectAllPhotos(string folder_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectAllPhotos", new object[] {
                        folder_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Photo[] EndSelectAllPhotos(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Photo[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectPhotoByFriendly", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo SelectPhotoByFriendly(int friendly_id) {
            object[] results = this.Invoke("SelectPhotoByFriendly", new object[] {
                        friendly_id});
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectPhotoByFriendly(int friendly_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectPhotoByFriendly", new object[] {
                        friendly_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Photo EndSelectPhotoByFriendly(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectPhotoByGUID", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo SelectPhotoByGUID(string photo_id) {
            object[] results = this.Invoke("SelectPhotoByGUID", new object[] {
                        photo_id});
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectPhotoByGUID(string photo_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectPhotoByGUID", new object[] {
                        photo_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Photo EndSelectPhotoByGUID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectAllInstances", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Instance[] SelectAllInstances(string photo_id) {
            object[] results = this.Invoke("SelectAllInstances", new object[] {
                        photo_id});
            return ((Instance[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectAllInstances(string photo_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectAllInstances", new object[] {
                        photo_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Instance[] EndSelectAllInstances(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Instance[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectInstance", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Instance SelectInstance(string instance_id) {
            object[] results = this.Invoke("SelectInstance", new object[] {
                        instance_id});
            return ((Instance)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectInstance(string instance_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectInstance", new object[] {
                        instance_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public Instance EndSelectInstance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Instance)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/SelectThumbnailInstance", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Instance SelectThumbnailInstance(string photo_id, int thumbnail_size) {
            object[] results = this.Invoke("SelectThumbnailInstance", new object[] {
                        photo_id,
                        thumbnail_size});
            return ((Instance)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectThumbnailInstance(string photo_id, int thumbnail_size, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectThumbnailInstance", new object[] {
                        photo_id,
                        thumbnail_size}, callback, asyncState);
        }
        
        /// <remarks/>
        public Instance EndSelectThumbnailInstance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Instance)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/Login", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string login, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        login,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string login, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        login,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.jborg.info/photodb/1.0/LoginAnonymous", RequestNamespace="http://services.jborg.info/photodb/1.0/", ResponseNamespace="http://services.jborg.info/photodb/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginAnonymous() {
            object[] results = this.Invoke("LoginAnonymous", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoginAnonymous(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoginAnonymous", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLoginAnonymous(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.jborg.info/photodb/1.0/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.jborg.info/photodb/1.0/", IsNullable=false)]
    public class SessionHeader : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string SessionID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.jborg.info/photodb/1.0/")]
    public class Instance {
        
        /// <remarks/>
        public System.Guid InstanceID;
        
        /// <remarks/>
        public System.Guid PhotoID;
        
        /// <remarks/>
        public int Width;
        
        /// <remarks/>
        public int Height;
        
        /// <remarks/>
        public string Format;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] Image;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.jborg.info/photodb/1.0/")]
    public class Photo {
        
        /// <remarks/>
        public System.Guid PhotoID;
        
        /// <remarks/>
        public System.Guid FolderID;
        
        /// <remarks/>
        public int FriendlyID;
        
        /// <remarks/>
        public string Caption;
        
        /// <remarks/>
        public int SecLevel;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.jborg.info/photodb/1.0/")]
    public class Folder {
        
        /// <remarks/>
        public System.Guid FolderID;
        
        /// <remarks/>
        public System.Guid Highlight;
        
        /// <remarks/>
        public int FriendlyID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Caption;
        
        /// <remarks/>
        public FolderSortOrder SortOrder;
        
        /// <remarks/>
        public int SecLevel;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.jborg.info/photodb/1.0/")]
    public enum FolderSortOrder {
        
        /// <remarks/>
        ByDate,
        
        /// <remarks/>
        ByPopularity,
    }
}
