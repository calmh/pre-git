#!/usr/bin/env python2.1
# $Id: pydc,v 1.1.1.1 2003/03/01 12:55:11 jb Exp $

# Copyright 2002
#       Jakob Borg <jakob@borg.pp.se>  All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	
from gui import GUI
from dc import DC
from qt import *
import sys

def setupMenusStatus(window, app, widget):
	mb = window.menuBar()
	mFile = QPopupMenu(mb)
	mFile.insertItem("&Connect...", widget.slotConnect)
	mFile.insertItem("&Quit DCTC", widget.slotDisconnect)
	mFile.insertSeparator()
	mFile.insertItem("&Preferences...", None)
	mFile.insertSeparator()
	mFile.insertItem("E&xit", app, SLOT("quit()"))
	mb.insertItem("&File", mFile)
	sb = window.statusBar()
	sb.message("not connected")
	return sb

def main(args):
        app = QApplication(args)
	window = QMainWindow()
	dc = DC()
        widget = GUI(parent=window, dc=dc)
	widget.sb = setupMenusStatus(window, app, widget)
	window.setCentralWidget(widget)
	window.setCaption("pydctc")
        window.show()	

        timer = QTimer(widget)
        timer.connect(timer, SIGNAL("timeout()"),
             widget.updateAll)
        timer.start(1000)

        app.connect(app, SIGNAL("lastWindowClosed()"),
                app, SLOT("quit()"))
        app.exec_loop()

if __name__=="__main__":
        main(sys.argv)
